#!/usr/bin/env bash

#==================================================================
# Some prerequisite libraries for REST, which should be installed 
# and accessable when compling and excuting the REST package:
#==================================================================
#0): REST_FORTRAN_COMPILER: you need a compiler for the Fortran code
REST_FORTRAN_COMPILER="gfortran"
#1): REST_CINT_DIR: the path to libcint.so
REST_CINT_DIR="path_to_libcint.so"
#2) the path to access the fortrain file
REST_EXT_DIR='/home/igor/.cargo/external_libs'
#3): REST_BLAS_DIR: the path to libopenblas.so
REST_BLAS_DIR="path_to_libopenblas.so"
#4): REST_HDF5_DIR: the path to libhdf5.so
REST_HDF5_DIR="path_to_libhdf5.so"
#5): the path to libxc.so
REST_XC_DIR="path_to_libxc.so"

#==================================================================
# set the current folder (REST_HOME)
#==================================================================
REST_HOME=`pwd`
REST_EXT_DIR=$REST_HOME/lib
[ ! -d $REST_EXT_DIR ] && mkdir $REST_EXT_DIR


repository="github"
local_path=""
active="y"
#==================================================================
# parse the input arguements
#==================================================================
while getopts r:p:e:h option
do
  case "${option}"
    in
    r) repository=${OPTARG};;
    p) local_path=${OPTARG};;
    e) 
      echo "DONOT add enviroments to bashrc"
      active="n"
      ;;
    h) 
      echo "Usage: $(basename $0) [OPTION...] [OPTARG]"
      echo "Configure the complitation and simulation environment for the REST package on Linux OS."
      echo ""
      echo "OPTION:"
      echo " -h         print the help information"
      echo " -r OPTARG  set the repository. The default OPTARG: github"
      echo "              local:    local repositories"
      echo "              github:   repositories on github"
      echo " -p OPTARG  provide the path to the local repositories"
      echo "            It is not necessary for the repositories on github"
      echo " -e         DONOT add enviroments to bashrc"
      echo "            This script will NOT modify your bashrc file. Use it only if you understand its implications"    
      echo " "
      echo " Example:"
      echo " 0) ./Config"
      echo "     : use the repositories on github by default"
      echo " 1) ./Config -r github"
      echo "     : use the repositories on github by default, and it is not necessary to declare the repository path with '-p' "
      echo " 2) ./Config -r local -p userid_@local_server:/path-to-the-repositories"
      echo "     : The configure script will then clone the rest, rest_tensors, rest_libcints via:"
      echo "          userid_@local_server:/path-to-the-repositories/rest.mirror"
      echo "          userid_@local_server:/path-to-the-repositories/rest_tensors.mirror"
      echo "          userid_@local_server:/path-to-the-repositories/rest_libcints.mirror"
      echo ""
      echo " Enjoy the electronic-structure calculations using the REST package!"
      echo ""
      exit
      ;;
    ?)
      echo "script usage: $(basename $0) [-h] [-e] [-r] [OPTARG] [-p] [OPTARG]" >&2
      exit 1
      ;;
  esac
done

if [ $repository = "github" ]; then
  export rest_repo_path="git@github.com:igor-1982/rest.git"
  export rest_tensors_repo_path="git@github.com:igor-1982/rest_tensors.git"
  export rest_libcint_repo_path="git@github.com:igor-1982/rest_libcint.git"
  echo $repository
elif [ $repository = "local" ]; then
  export rest_repo_path="${local_path}/rest.mirror"
  export rest_tensors_repo_path="${local_path}/rest_tensors.mirror"
  export rest_libcint_repo_path="${local_path}/rest_libcint.mirror"
  echo $repository
else
  echo "Invalid repository is used: $repository"
  exit
fi

#==================================================================
# Clone the source codes from repositories
#==================================================================
[ ! -d rest ] && git clone $rest_repo_path rest
[ ! -d rest_tensors ] && git clone $rest_tensors_repo_path rest_tensors
[ ! -d rest_libcint ] && git clone $rest_libcint_repo_path rest_libcint

# untar the basis sets in the json format from BSE
if [ -f rest/basis_sets-json.tar.bz2 ]; then
  tar -xjf rest/basis_sets-json.tar.bz2
  mv basis_sets-json.tar.bz2 rest/bse_pool
fi


if ! command -v $REST_FORTRAN_COMPILER &> /dev/null
then
  echo "The fortran compiler $REST_FORTRAN_COMPILER could not be found. Please use an available fortran compiler"
  exit
else
  echo "The fortran compiler $REST_FORTRAN_COMPILER is available"
fi

#=======================================================================
# Append the setting of global enviroment variables to the bash_profile
#=======================================================================
if [ $active = "y" ]; then
  if [ ! -f $HOME/.bash_profile ]; then 
    echo 'export REST_FORTRAN_COMPILER="'$REST_FORTRAN_COMPILER'"' > $HOME/.bash_profile
  else
    echo 'export REST_FORTRAN_COMPILER="'$REST_FORTRAN_COMPILER'"' >> $HOME/.bash_profile
  fi
  echo 'export REST_HOME="'$REST_HOME'"' >> $HOME/.bash_profile
  echo 'export REST_EXT_DIR="'$REST_EXT_DIR'"' >> $HOME/.bash_profile
  echo 'export REST_CINT_DIR="'$REST_CINT_DIR'"' >> $HOME/.bash_profile
  echo 'export REST_BLAS_DIR="'$REST_BLAS_DIR'"' >> $HOME/.bash_profile
  echo 'export REST_HDF5_DIR="'$REST_HDF5_DIR'"' >> $HOME/.bash_profile
  echo 'export REST_XC_DIR="'$REST_XC_DIR'"' >> $HOME/.bash_profile
  echo 'export LD_LIBRARY_PATH="'$REST_XC_DIR:$REST_EXT_DIR:$REST_CINT_DIR:$REST_BLAS_DIR:$REST_HDF5_DIR:'$LD_LIBRARY_PATH"' >> $HOME/.bash_profile
  echo "! After running 'source \$HOME/.bash_profile', please execute the following commands in your terminal..."
else
  echo "! Note: Please activate the following environments manually..."
  echo "-----------------------------------"
  echo 'REST_FORTRAN_COMPILER="'$REST_FORTRAN_COMPILER'"'
  echo 'REST_HOME="'$REST_HOME'"' 
  echo 'REST_EXT_DIR="'$REST_EXT_DIR'"' 
  echo 'REST_CINT_DIR="'$REST_CINT_DIR'"' 
  echo 'REST_BLAS_DIR="'$REST_BLAS_DIR'"' 
  echo 'REST_HDF5_DIR="'$REST_HDF5_DIR'"' 
  echo 'REST_XC_DIR="'$REST_XC_DIR'"'
  echo 'LD_LIBRARY_PATH="'$REST_XC_DIR:$REST_EXT_DIR:$REST_CINT_DIR:$REST_BLAS_DIR:$REST_HDF5_DIR:'$LD_LIBRARY_PATH"' 
  echo "! Note: After activating enviroments, please run the following commands in your terminal..."
fi
echo "-----------------------------------"
echo 'export RUSTDOCFLAGS="--html-in-header $REST_HOME/rest/katex.html"'
echo 'export RUSTFLAGS="-L $REST_XC_DIR -lxc -L $REST_EXT_DIR -lrest2fch -C target-cpu=native"'


#echo 'export HDF5_DIR="'$libhdf5_path'"' >> $HOME/.bash_profile
## make sure gcc with correct version is loaded properly
#gcc_path='/share/apps/GCC/gcc8'
#echo 'export PATH="'$gcc_path'/bin:$PATH"' >> $HOME/.bash_profile
#echo 'export LD_LIBRARY_PATH="'$gcc_path'/lib:'$gcc_path'/lib64:$LD_LIBRARY_PATH"' >> $HOME/.bash_profile
#echo '#alias cc='$gcc_path'/gcc' >> $HOME/.bash_profile
